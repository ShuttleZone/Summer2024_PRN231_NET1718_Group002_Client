name: "Apply terraform run"

on:
  workflow_call:
    secrets:
      TF_API_TOKEN:
        required: true
      TF_WORKSPACE:
        required: true
      TF_CLOUD_ORGANIZATION:
        required: true
      GCP_PROJECT_ID:
        required: true
      GCP_REGION:
        required: true
      GCP_ZONE:
        required: true
      GCP_STATIC_IP:
        required: true
      OS_IMAGE_NAME:
        required: true

env:
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_CLOUD_ORGANIZATION: "${{ secrets.TF_CLOUD_ORGANIZATION }}"
  TF_WORKSPACE: "${{ secrets.TF_WORKSPACE }}"
  CONFIG_DIRECTORY: "./.deploy/terraform"
  TF_VAR_project_id: "\"${{ secrets.GCP_PROJECT_ID }}\""
  TF_VAR_region: "${{ secrets.GCP_REGION }}"
  TF_VAR_zone: "${{ secrets.GCP_ZONE }}"
  TF_VAR_static_ip: "\"${{ secrets.GCP_STATIC_IP }}\""
  TF_VAR_os_image_name: "${{ secrets.OS_IMAGE_NAME }}"
  TF_VAR_email: "\"${{ secrets.GCP_EMAIL }}\""
  TF_VAR_token: "\"${{ secrets.GH_TOKEN }}\""
  TF_VAR_docker_image: "\"${{ secrets.DOCKER_IMAGE }}\""

jobs:
  terraform:
    name: "Apply terraform run"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.0
        id: upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.0
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload.outputs.configuration_version_id }}

      - name: Apply Run
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.0
        id: apply
        with:
          run: ${{ steps.create-run.outputs.run_id }}
          comment: "Apply run from GitHub Actions ${{ github.sha }}"
